{"version":3,"sources":["loading.gif","components/DisplayMovies.js","actions/addNomination.js","actions/types.js","components/DisplayNominations.js","actions/deleteNomination.js","components/SearchBar.js","App.js","reducers/pageReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","DisplayMovies","handleOnClick","event","props","addNomination","movie","className","this","Title","Year","undefined","pageState","nominations","find","imdbID","Button","variant","size","onClick","disabled","Component","connect","state","dispatch","type","payload","DisplayNominations","e","deleteNomination","SearchBar","handleOnChange","input","target","value","setState","keyword","movies","error","isLoading","fetchMovies","url","axios","get","then","response","console","log","data","Response","Search","Error","catch","handleOnSubmit","preventDefault","renderResult","map","Fragment","key","src","Loading","alt","renderNomination","showAlert","length","Alert","Heading","Form","onSubmit","InputGroup","Prepend","Text","icon","faSearch","FormControl","placeholder","onChange","App","id","initialState","localStorage","getItem","JSON","parse","combineReducers","action","updatedNominations","setItem","stringify","newNominations","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d68b080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.26ef8bb4.gif\";","import React, { Component } from 'react';\nimport { addNomination } from '../actions/addNomination';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\n\n\nclass DisplayMovies extends Component{\n\n    handleOnClick = (event) =>{\n        this.props.addNomination(this.props.movie);\n    }\n\n    render(){\n\n        return(\n        <div className=\"displayMovie\">\n            <li>{this.props.movie.Title}{\" (\"+this.props.movie.Year+\")\"}</li>&nbsp;&nbsp;&nbsp;\n            {\n                (this.props.pageState.nominations.find(movie => { return movie.imdbID === this.props.movie.imdbID}) === undefined) ? \n                (\n                    <Button variant=\"light\" size=\"sm\" onClick={this.handleOnClick}>Nominate</Button>\n                ):\n                (\n                    <Button variant=\"light\" size=\"sm\" disabled>Nominate</Button>\n                )\n            }    \n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    pageState : state.pageState\n})\n\nexport default connect(mapStateToProps, {addNomination})(DisplayMovies);","import { ADD_NOMINATION } from './types';\n\n\nexport const addNomination = (movie) =>{\n    return(dispatch) => {\n        dispatch({\n            type: ADD_NOMINATION,\n            payload: movie\n        });\n    }\n}","export const ADD_NOMINATION = 'ADD_NOMINATION';\nexport const DELETE_NOMINATION = 'DELETE_NOMINATION';","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap'\nimport { deleteNomination } from '../actions/deleteNomination'\nimport { connect } from 'react-redux';\n\nclass DisplayNominations extends Component{\n   \n    handleOnClick = (e) =>{\n        this.props.deleteNomination(this.props.movie);\n    }\n        \n    render() {\n        return (\n            <div className=\"displayNomination\">\n                <li>{this.props.movie.Title}{\" (\"+this.props.movie.Year+\")\"}</li>&nbsp;&nbsp;&nbsp;\n                <Button variant=\"dark\" size=\"sm\" onClick={this.handleOnClick}>Remove</Button>          \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    pageState: state.pageState\n});\n\nexport default connect(mapStateToProps,{ deleteNomination })(DisplayNominations)\n","import { DELETE_NOMINATION } from './types';\n\n\nexport const deleteNomination = (movie) =>{\n    return(dispatch) => {\n        dispatch({\n            type: DELETE_NOMINATION,\n            payload: movie\n        });\n    }\n}","import React, { Component } from 'react'\nimport {InputGroup ,FormControl, Form, Alert} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport DisplayMovies from './DisplayMovies';\nimport axios from 'axios';\nimport Loading from '../loading.gif'\nimport { connect } from 'react-redux';\nimport DisplayNominations from './DisplayNominations';\n\nclass SearchBar extends Component{\n\n    constructor(props){\n        super(props);\n            this.state = {\n                movies: [],\n                error: '',\n                keyword: '',\n                isLoading : false,\n                showAlert: false\n            }\n\n        \n    }\n\n    handleOnChange = (event) => {\n        const input = event.target.value\n\n        if(input === \"\"){\n\n            this.setState({\n                keyword: input,\n                movies : [],\n                error: '',\n                isLoading: false,\n            });\n\n        } else {\n\n            this.setState({\n                keyword: input,\n                isLoading: true,\n                error: ''},\n                () =>{\n                    this.fetchMovies(input);\n            });\n\n\n        }\n        \n    }\n\n    fetchMovies = (keyword) => {\n\n        const url = `https://www.omdbapi.com/?s=${keyword}&apikey=4646bbea`;\n\n        axios.get(url)\n        .then(response => {\n\n            console.log(response);\n            if(response.data.Response === \"True\"){\n                this.setState({ \n                    movies: response.data.Search,\n                    error: '',\n                    isLoading: false\n                });  \n                \n            } else {\n                this.setState({ \n                    movies: [],\n                    error: response.data.Error,\n                    isLoading: false\n                });\n            }\n            \n        })\n        .catch(error => {\n            console.log(error);\n        });\n        \n\n    }\n\n    handleOnSubmit = (event) => {\n\n        event.preventDefault();\n        \n    }\n\n    renderResult = () => {\n        \n        const {movies,keyword, error} = this.state;\n        if(movies !== undefined){\n\n            return(\n                <div className=\"resultContainer\">\n                    <h3>Results for \"{keyword}\"</h3>\n                    <ul>\n                    {\n                        movies.map(movie => {\n                            return(\n                                <React.Fragment key={movie.imdbID}>\n                                    <DisplayMovies movie={movie}/>\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                    </ul>\n\n                   \n                </div>\n            )\n\n        } \n\n        if(error === \"Too many results.\"){\n            return(\n                <img  src={Loading} alt=\"loader\"/>\n            )\n        }\n\n    }\n\n    renderNomination = () =>{\n        const { nominations } = this.props.pageState\n        if(nominations !== undefined){\n            return(\n                <div>\n                    <ul>\n                        {nominations.map( movie =>{\n                            return(\n                                <React.Fragment key={movie.imdbID}>\n                                    <DisplayNominations movie={movie}/>\n                                </React.Fragment>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n\n    render(){\n\n        return (\n            <div>\n                <div className=\"searchContainer\">\n                {\n                    this.props.pageState.nominations.length >= 5 &&\n                    <Alert variant=\"warning\">\n                        <Alert.Heading>Alert Banner</Alert.Heading>\n                        <p>You have nominated 5 Movies</p>\n                    </Alert>\n                }\n\n                <Form onSubmit={this.handleOnSubmit}>\n                    <InputGroup className=\"mb-4\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>\n                                <FontAwesomeIcon icon={faSearch} />\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl type=\"text\" placeholder=\"Movie Title\" onChange={this.handleOnChange} />   \n                    </InputGroup>\n                </Form>\n\n                </div>\n\n                <div className=\"comboContainer\">\n\n                    {this.state.keyword !== \"\" && this.renderResult()}\n\n                    <div className=\"nominationContainer\">\n\n                        <h3>Your Nomination List</h3>\n                        {\n                        \n                            !(this.props.pageState.nominations.length) ? (\n\n                                <div>\n\n                                  <p>No movies added.</p> \n                                  <p>Please search for the movie and add to your nomination list</p>\n\n                                </div>\n                                \n                            ):(\n                                this.renderNomination()\n                            )\n                        }\n                    \n                    </div>\n\n\n                </div>\n                \n                \n\n                {this.state.error && <h3 className=\"message\">{this.state.error}</h3> }\n\n                <img  src={Loading} className={`loading ${this.state.isLoading ? 'show' : 'hide' }`}  alt=\"loading\"/>\n                   \n            </div>\n\n                \n        );\n        \n    }\n}\n\nconst mapStateToProps = (state) => ({\n    pageState: state.pageState\n});\n\nexport default connect(mapStateToProps)(SearchBar)\n","import React from 'react';\nimport SearchBar from './components/SearchBar';\n\n\nfunction App() {\n  return (\n    <div id=\"main\">\n        <h1> The Shoppies</h1>\n        <SearchBar/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_NOMINATION, DELETE_NOMINATION} from '../actions/types';\n\nconst initialState = {\n    nominations: localStorage.getItem('nominations') === null ? [] : JSON.parse(localStorage.getItem('nominations'))\n}\n\nexport default (state = initialState, action) => {\n\n    switch(action.type){\n\n        case ADD_NOMINATION : \n            let updatedNominations = [...state.nominations, action.payload]\n            localStorage.setItem('nominations', JSON.stringify(updatedNominations))   \n            return{     \n                ...state,       \n                nominations: [...state.nominations, action.payload]\n            }\n\n        case DELETE_NOMINATION :      \n            let newNominations = state.nominations.filter( movie => {\n            return movie.imdbID !== action.payload.imdbID             \n        })\n        localStorage.setItem('nominations', JSON.stringify(newNominations))  \n        return{\n            ...state,\n            nominations: newNominations\n        }\n        default:\n            return state\n    }\n\n}","import { combineReducers } from 'redux';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    pageState: pageReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst intialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store  from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}